{
  "name": "teachai",
  "version": "2.0.0",
  "description": "基于 Next.js 和 Node.js 的全栈 AI 教案生成应用",
  "private": true,
  "scripts": {
    "dev": "concurrently \"pnpm run dev:server\" \"pnpm run dev:web\"",
    "dev:web": "cd web && pnpm dev",
    "dev:server": "cd server && pnpm run dev",
    "build": "pnpm run build:web && pnpm run build:server",
    "build:web": "cd web && pnpm build",
    "build:server": "cd server && pnpm run build",
    "start": "concurrently \"pnpm run start:server\" \"pnpm run start:web\"",
    "start:web": "cd web && pnpm start",
    "start:server": "cd server && pnpm start",
    "install:all": "pnpm install && cd web && pnpm install && cd ../server && pnpm install",
    "clean": "rm -rf web/node_modules web/.next server/node_modules",
    "lint": "cd web && pnpm lint",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:server": "cd server && pnpm test",
    "test:web": "cd web && pnpm test",
    "test:all": "pnpm run test:server && pnpm run test:web",
    "format": "npx prettier --write .",
    "chroma:start": "echo '⚠️  ChromaDB not needed locally - using external RAG service'",
    "chroma:stop": "echo '⚠️  ChromaDB not needed locally - using external RAG service'",
    "chroma:start:docker": "echo '⚠️  ChromaDB Docker not needed locally - using external RAG service'",
    "chroma:stop:docker": "echo '⚠️  ChromaDB Docker not needed locally - using external RAG service'",
    "chroma:start:centos": "echo '⚠️  ChromaDB CentOS not needed locally - using external RAG service'",
    "chroma:stop:centos": "echo '⚠️  ChromaDB CentOS not needed locally - using external RAG service'",
    "rag:load": "echo '⚠️  RAG loading not needed locally - using external RAG service'",
    "rag:progress": "echo '⚠️  RAG progress not needed locally - using external RAG service'",
    "rag:progress:watch": "echo '⚠️  RAG progress watching not needed locally - using external RAG service'",
    "rag:status": "echo '⚠️  RAG status not needed locally - using external RAG service'",
    "rag:reset": "echo '⚠️  RAG reset not needed locally - using external RAG service'",
    "test:rag-accuracy": "echo '⚠️  RAG accuracy testing not needed locally - using external RAG service'",
    "test:rag-accuracy:quick": "echo '⚠️  RAG accuracy testing not needed locally - using external RAG service'",
    "test:rag-accuracy:biology": "echo '⚠️  RAG accuracy testing not needed locally - using external RAG service'",
    "test:rag-accuracy:math": "echo '⚠️  RAG accuracy testing not needed locally - using external RAG service'",
    "test:rag-accuracy:chinese": "echo '⚠️  RAG accuracy testing not needed locally - using external RAG service'",
    "test:rag-accuracy:english": "echo '⚠️  RAG accuracy testing not needed locally - using external RAG service'",
    "test:rag-ci": "echo '⚠️  RAG CI testing not needed locally - using external RAG service'",
    "dev:full": "echo '💡 dev:full not needed - use pnpm dev (ChromaDB runs externally)'",
    "start:full": "echo '💡 start:full not needed - use pnpm start (ChromaDB runs externally)'",
    "setup:rag": "echo '💡 RAG setup not needed - using external HuggingFace RAG service'",
    "deploy:zeabur": "bash deploy-zeabur.sh",
    "start:zeabur": "concurrently \"pnpm run start:server\" \"pnpm run start:web\"",
    "build:zeabur": "pnpm run install:all && pnpm run build",
    "postinstall": "echo 'Installation completed. Run pnpm start for production or pnpm dev for development.'",
    "health-check": "curl -f http://localhost:3001/api/health || exit 1"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.28.0",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@types/jest": "^29.5.14",
    "concurrently": "^8.2.2",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "supertest": "^7.1.3"
  },
  "engines": {
    "node": ">=18.17.0",
    "pnpm": ">=8.0.0"
  },
  "keywords": [
    "ai",
    "education",
    "lesson-plan",
    "nextjs",
    "nodejs",
    "typescript",
    "tailwindcss"
  ],
  "author": "TeachAI Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/teachai.git"
  },
  "dependencies": {
    "@gradio/client": "^1.17.1",
    "next": "^15.3.5"
  }
}
