#!/bin/bash
set -e

echo "ðŸš€ Zeabur Deployment Script for AI Lesson Plan Generator"
echo "======================================================"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if required tools are installed
check_requirements() {
    print_status "Checking requirements..."
    
    if ! command -v curl &> /dev/null; then
        print_error "curl is required but not installed"
        exit 1
    fi
    
    if ! command -v git &> /dev/null; then
        print_error "git is required but not installed"
        exit 1
    fi
    
    print_success "All requirements satisfied"
}

# Check environment variables
check_env_vars() {
    print_status "Checking environment variables..."
    
    missing_vars=()
    
    if [ -z "$DASHSCOPE_API_KEY" ]; then
        missing_vars+=("DASHSCOPE_API_KEY")
    fi
    
    if [ -z "$JWT_SECRET" ]; then
        missing_vars+=("JWT_SECRET")
    fi
    
    if [ ${#missing_vars[@]} -ne 0 ]; then
        print_error "Missing required environment variables:"
        for var in "${missing_vars[@]}"; do
            echo "  - $var"
        done
        echo ""
        echo "Please set them in your Zeabur dashboard under Variables tab"
        exit 1
    fi
    
    print_success "Environment variables configured"
}

# Deploy to Zeabur using CLI (if available) or provide instructions
deploy_to_zeabur() {
    print_status "Preparing Zeabur deployment..."
    
    # Check if zeabur CLI is available
    if command -v zeabur &> /dev/null; then
        print_status "Zeabur CLI found, deploying via CLI..."
        
        # Login check
        if ! zeabur auth whoami &> /dev/null; then
            print_warning "Please login to Zeabur first:"
            echo "zeabur auth login"
            exit 1
        fi
        
        # Deploy using template
        print_status "Deploying services..."
        zeabur template deploy zeabur-template.yaml
        
        print_success "Deployment initiated via Zeabur CLI"
        
    else
        print_warning "Zeabur CLI not found"
        print_status "Please deploy manually using one of these methods:"
        echo ""
        echo "ðŸ“‹ Method 1: Direct Repository Deployment"
        echo "1. Go to https://dash.zeabur.com"
        echo "2. Click 'New Project'"
        echo "3. Connect your GitHub repository: https://github.com/LQ458/lesson-plan-generator"
        echo "4. Select branch: web"
        echo "5. Zeabur will auto-detect the monorepo structure"
        echo ""
        echo "ðŸ“‹ Method 2: Template Deployment"
        echo "1. Upload zeabur-template.yaml to Zeabur templates"
        echo "2. Deploy from template with required variables"
        echo ""
        echo "ðŸ“‹ Method 3: Service by Service"
        echo "1. Create new project in Zeabur"
        echo "2. Add MongoDB service"
        echo "3. Add ChromaDB service (Docker: ghcr.io/chroma-core/chroma:latest)"
        echo "4. Add Backend service (from ./server directory)"
        echo "5. Add Frontend service (from ./web directory)"
    fi
}

# Create environment file for local testing
create_env_template() {
    print_status "Creating environment template..."
    
    cat > .env.zeabur << 'EOF'
# Zeabur Environment Variables Template
# Copy these to your Zeabur dashboard Variables tab

# Required - Get from https://dashscope.aliyun.com/
DASHSCOPE_API_KEY=your_qwen_api_key_here

# Required - Generate a secure random string
JWT_SECRET=your_secure_jwt_secret_here

# Auto-generated by Zeabur services
MONGODB_URI=mongodb://admin:${MONGO_PASSWORD}@mongodb:27017/teachai?authSource=admin
CHROMA_HOST=chromadb
CHROMA_PORT=8000

# Optional - AI Configuration
QWEN_MODEL=qwen-plus
AI_MAX_TOKENS=2000
AI_TEMPERATURE=0.7

# Auto-configured
NODE_ENV=production
PORT=3001
WEB_PORT=3000
NEXT_TELEMETRY_DISABLED=1
EOF

    print_success "Environment template created: .env.zeabur"
}

# Verify deployment setup
verify_setup() {
    print_status "Verifying deployment setup..."
    
    required_files=(
        "zbpack.json"
        "zeabur-template.yaml" 
        "package.json"
        "web/package.json"
        "server/package.json"
        "server/rag_data/chunks"
    )
    
    missing_files=()
    for file in "${required_files[@]}"; do
        if [ ! -e "$file" ]; then
            missing_files+=("$file")
        fi
    done
    
    if [ ${#missing_files[@]} -ne 0 ]; then
        print_error "Missing required files:"
        for file in "${missing_files[@]}"; do
            echo "  - $file"
        done
        exit 1
    fi
    
    print_success "All required files present"
}

# Post-deployment instructions
post_deployment_instructions() {
    print_status "Post-deployment setup instructions:"
    echo ""
    echo "ðŸ”§ After your services are deployed:"
    echo ""
    echo "1. Load Educational Data:"
    echo "   curl -X POST https://your-backend-url/api/admin/load-rag-data"
    echo ""
    echo "2. Verify Services:"
    echo "   - Frontend: https://your-frontend-url"
    echo "   - Backend Health: https://your-backend-url/api/health"  
    echo "   - ChromaDB Health: https://your-chromadb-url/api/v1/heartbeat"
    echo ""
    echo "3. Monitor Resource Usage:"
    echo "   - Check Zeabur dashboard for CPU/Memory usage"
    echo "   - Monitor logs for any errors"
    echo ""
    echo "4. Expected Timeline:"
    echo "   - Service startup: 2-3 minutes"
    echo "   - RAG data loading: 5-10 minutes" 
    echo "   - Full system ready: ~10-15 minutes"
    echo ""
    print_success "Deployment guide complete!"
}

# Main execution
main() {
    echo ""
    check_requirements
    echo ""
    verify_setup
    echo ""
    create_env_template
    echo ""
    check_env_vars
    echo ""
    deploy_to_zeabur
    echo ""
    post_deployment_instructions
    echo ""
    print_success "ðŸŽ‰ Zeabur deployment preparation complete!"
    echo ""
    print_status "Next steps:"
    echo "1. Set environment variables in Zeabur dashboard"
    echo "2. Deploy using your preferred method above"
    echo "3. Wait for services to start (~10-15 minutes)"
    echo "4. Test the application"
    echo ""
    print_status "Documentation: https://zeabur.com/docs"
    print_status "Support: Create issue at https://github.com/LQ458/lesson-plan-generator/issues"
}

# Run main function
main "$@"